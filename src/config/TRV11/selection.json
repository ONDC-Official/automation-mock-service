{
	"_TESTS_": {
	  "search": [
		{
		  "_NAME_": "first_search_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 100
		},
		{
		  "_NAME_": "second_search_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 101
		},
		{
		  "_NAME_": "first_onsearch_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "city_code": "$._EXTERNAL.city_code",
		  "bap_uri": "$._EXTERNAL.bap_uri",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 102
		},
		{
		  "_NAME_": "second_onsearch_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "start_code": "$._EXTERNAL.start_code",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType)  && (start_code are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 103
		},
		{
		  "_NAME_": "select_request_METRO",
		  "lastAction": "$._EXTERNAL.last_action",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 104
		},
		{
		  "_NAME_": "onselect_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "selected_item_ids": "$._EXTERNAL.selected_item_ids[*]",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType)  && (selected_item_ids are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 105
		},
		{
		  "_NAME_": "init_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 106
		},
		{
		  "_NAME_": "oninit_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "payments": "$._EXTERNAL.payments[*].collected_by",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType)  && (payments are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 107
		},
		{
		  "_NAME_": "confirm_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 108
		},
		{
		  "_NAME_": "onconfirm_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "updated_payments": "$._EXTERNAL.updated_payments[*].id",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType)  && (updated_payments are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 109
		},
		{
		  "_NAME_": "onconfirm_delayed_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "updated_payments": "$._EXTERNAL.updated_payments[*].id",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType)  && (updated_payments are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 110
		},
		{
		  "_NAME_": "status_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 111
		},
		{
		  "_NAME_": "onstatus_active_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType)  && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 112
		},
		{
		  "_NAME_": "onstatus_complete_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType)  && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 113
		},
		{
		  "_NAME_": "onstatus_complete_unsolicited_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 114
		},
		{
		  "_NAME_": "cancel_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 115
		},
		{
		  "_NAME_": "cancel_soft_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 116
		},
		{
		  "_NAME_": "cancel_hard_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 117
		},
		{
		  "_NAME_": "oncancel_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "order_id": "$._EXTERNAL.order_id",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 118
		},
		{
		  "_NAME_": "oncancel_soft_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "order_id": "$._EXTERNAL.order_id",
		  "forUsecaseId": ["METRO"],
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 119
		},
		{
		  "_NAME_": "oncancel_hard_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 120
		},
		{
		  "_NAME_": "oncancel_init_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 121
		},
		{
		  "_NAME_": "onupdate_request_METRO",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["METRO"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 122
		},
		{
		  "_NAME_": "first_search_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 123
		},
		{
		  "_NAME_": "second_search_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 124
		},
		{
		  "_NAME_": "first_onsearch_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "city_code": "$._EXTERNAL.city_code",
		  "bap_uri": "$._EXTERNAL.bap_uri",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 125
		},
		{
		  "_NAME_": "second_onsearch_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "start_code": "$._EXTERNAL.start_code",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType)  && (start_code are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 126
		},
		{
		  "_NAME_": "select_request",
		  "lastAction": "$._EXTERNAL.last_action",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 127
		},
		{
		  "_NAME_": "onselect_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "selected_item_ids": "$._EXTERNAL.selected_item_ids[*]",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType)  && (selected_item_ids are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 128
		},
		{
		  "_NAME_": "init_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 129
		},
		{
		  "_NAME_": "oninit_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "payments": "$._EXTERNAL.payments[*].collected_by",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType)  && (payments are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 130
		},
		{
		  "_NAME_": "confirm_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 131
		},
		{
		  "_NAME_": "onconfirm_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "updated_payments": "$._EXTERNAL.updated_payments[*].id",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType)  && (updated_payments are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 132
		},
		{
		  "_NAME_": "onconfirm_delayed_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "updated_payments": "$._EXTERNAL.updated_payments[*].id",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType)  && (updated_payments are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 133
		},
		{
		  "_NAME_": "status_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 134
		},
		{
		  "_NAME_": "onstatus_active_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType)  && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 135
		},
		{
		  "_NAME_": "onstatus_complete_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType)  && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 136
		},
		{
		  "_NAME_": "onstatus_complete_unsolicited_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 137
		},
		{
		  "_NAME_": "cancel_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 138
		},
		{
		  "_NAME_": "cancel_soft_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 139
		},
		{
		  "_NAME_": "cancel_hard_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BAP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 140
		},
		{
		  "_NAME_": "oncancel_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 141
		},
		{
		  "_NAME_": "oncancel_soft_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 142
		},
		{
		  "_NAME_": "oncancel_hard_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 143
		},
		{
		  "_NAME_": "oncancel_init_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 144
		},
		{
		  "_NAME_": "onupdate_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 145
		},
		{
		  "_NAME_": "status_tech_request",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 146
		},
		{
		  "_NAME_": "unsolicited_oncancel",
		  "mockType": "$._EXTERNAL.mock_type",
		  "forType": ["BPP"],
		  "usecaseId": "$._EXTERNAL.usecaseId",
		  "forUsecaseId": ["BUS"],
		  "order_id": "$._EXTERNAL.order_id",
		  "_RETURN_": "(mockType equal to forType) && (order_id are present) && (usecaseId equal to forUsecaseId)",
		  "_SUCCESS_CODE_": 147
		}
	  ]
	},
	"_SESSION_DATA_": {
	  "search": {}
	}
  }
  