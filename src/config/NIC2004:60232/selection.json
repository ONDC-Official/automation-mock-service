{
  "_TESTS_": {
    "action": [
      {
        "_NAME_": "first_search_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "forType": ["BAP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
        "_SUCCESS_CODE_": 100
      },
      {
        "_NAME_": "init_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "forType": ["BAP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "providerId": "$._EXTERNAL.provider_id",
        "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId) && (providerId are present)",
        "_SUCCESS_CODE_": 102
      },
      {
        "_NAME_": "confirm_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "forType": ["BAP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "quotePrice": "$._EXTERNAL.quote_price",
        "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId) && (quotePrice are present)",
        "_SUCCESS_CODE_": 103
      },
      {
        "_NAME_": "update_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "forType": ["BAP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "orderId": "$._EXTERNAL.order_id",
        "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId) && (orderId are present)",
        "_SUCCESS_CODE_": 104
      },
      {
        "_NAME_": "track_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "forType": ["BAP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "pickupTimestamp": "$._EXTERNAL.fulfillment_pickup_timestamp",
        "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId) && (pickupTimestamp are present)",
        "_SUCCESS_CODE_": 105
      },
      {
        "_NAME_": "cancel_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "forType": ["BAP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "orderId": "$._EXTERNAL.order_id",
        "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId) && (orderId are present)",
        "_SUCCESS_CODE_": 108
      },
      {
        "_NAME_": "on_search_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "city_code": "$._EXTERNAL.city_code",
        "bap_uri": "$._EXTERNAL.bap_uri",
        "forType": ["BPP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId equal to forUsecaseId)",
        "_SUCCESS_CODE_": 105
      },
      {
        "_NAME_": "on_init_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "city_code": "$._EXTERNAL.city_code",
        "bap_uri": "$._EXTERNAL.bap_uri",
        "forType": ["BPP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "billing": "$._EXTERNAL.billing",
        "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId equal to forUsecaseId) && (billing are present)",
        "_SUCCESS_CODE_": 106
      },
      {
        "_NAME_": "on_confirm_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "city_code": "$._EXTERNAL.city_code",
        "bap_uri": "$._EXTERNAL.bap_uri",
        "forType": ["BPP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "orderId": "$._EXTERNAL.order_id",
        "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId equal to forUsecaseId) && (orderId are present)",
        "_SUCCESS_CODE_": 107
      },
      {
        "_NAME_": "on_update_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "city_code": "$._EXTERNAL.city_code",
        "bap_uri": "$._EXTERNAL.bap_uri",
        "forType": ["BPP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "orderId": "$._EXTERNAL.order_id",
        "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId equal to forUsecaseId) && (orderId are present)",
        "_SUCCESS_CODE_": 109
      },
      {
        "_NAME_": "on_status_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "city_code": "$._EXTERNAL.city_code",
        "bap_uri": "$._EXTERNAL.bap_uri",
        "forType": ["BPP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "orderId": "$._EXTERNAL.order_id",
        "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId equal to forUsecaseId) && (orderId are present)",
        "_SUCCESS_CODE_": 110
      },
      {
        "_NAME_": "on_track_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "city_code": "$._EXTERNAL.city_code",
        "bap_uri": "$._EXTERNAL.bap_uri",
        "forType": ["BPP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "isTrackExecuted": "$._EXTERNAL.is_track_execute",
        "trackExecuted": ["true"],
        "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId equal to forUsecaseId) && (isTrackExecuted equal to trackExecuted)",
        "_SUCCESS_CODE_": 111
      },
      {
        "_NAME_": "on_cancel_request_LOGISTICS",
        "mockType": "$._EXTERNAL.mock_type",
        "city_code": "$._EXTERNAL.city_code",
        "bap_uri": "$._EXTERNAL.bap_uri",
        "forType": ["BPP"],
        "usecaseId": "$._EXTERNAL.usecaseId",
        "forUsecaseId": ["LOGISTICS"],
        "isCancelExecuted": "$._EXTERNAL.is_cancel_executed",
        "cancelExecuted": ["true"],
        "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId equal to forUsecaseId) && (isCancelExecuted equal to cancelExecuted)",
        "_SUCCESS_CODE_": 110
      }
    ]
  },
  "_SESSION_DATA_": {
    "search": {}
  }
}
