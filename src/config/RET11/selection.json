{
    "_TESTS_": {
      "search": [
        {
          "_NAME_": "first_search_request",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BAP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["F&B"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId any in forUsecaseId)",
          "_SUCCESS_CODE_": 100
        },
        {
          "_NAME_": "on_search_1_request",
          "mockType": "$._EXTERNAL.mock_type",
          "city_code": "$._EXTERNAL.city_code",
          "bap_uri": "$._EXTERNAL.bap_uri",
          "forType": ["BPP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["F&B"],
          "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId any in forUsecaseId)",
          "_SUCCESS_CODE_": 101
        },
        {
          "_NAME_": "on_search_1_request",
          "mockType": "$._EXTERNAL.mock_type",
          "city_code": "$._EXTERNAL.city_code",
          "bap_uri": "$._EXTERNAL.bap_uri",
          "forType": ["BPP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["F&B"],
          "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId any in forUsecaseId)",
          "_SUCCESS_CODE_": 102
        },
        {
          "_NAME_": "on_search_1_request",
          "mockType": "$._EXTERNAL.mock_type",
          "city_code": "$._EXTERNAL.city_code",
          "bap_uri": "$._EXTERNAL.bap_uri",
          "forType": ["BPP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["F&B"],
          "_RETURN_": "(mockType equal to forType) && (bap_uri are present) && (city_code are present) && (usecaseId any in forUsecaseId)",
          "_SUCCESS_CODE_": 103
        },
        {
          "_NAME_": "init_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BAP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 101
        },
        {
          "_NAME_": "on_init_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BPP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 106
        },
        {
          "_NAME_": "confirm_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BAP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 102
        },
        {
          "_NAME_": "on_confirm_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BPP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 107
        },
        {
          "_NAME_": "update_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BAP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 103
        },
        {
          "_NAME_": "on_update_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BPP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 109
        },
        {
          "_NAME_": "track_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BAP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 104
        },
        {
          "_NAME_": "on_track_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BPP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 111
        },
        {
          "_NAME_": "cancel_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BAP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 108
        },
        {
          "_NAME_": "on_cancel_request_LOGISTICS",
          "mockType": "$._EXTERNAL.mock_type",
          "forType": ["BPP"],
          "usecaseId": "$._EXTERNAL.usecaseId",
          "forUsecaseId": ["LOGISTICS"],
          "_RETURN_": "(mockType equal to forType) && (usecaseId equal to forUsecaseId)",
          "_SUCCESS_CODE_": 110
        }
      ]
    },
    "_SESSION_DATA_": {
      "search": {
        "transaction_id": null,
        "message_id": null,
        "last_action": null,
        "mock_type": null,
        "domain": null
      }
    }
  }
